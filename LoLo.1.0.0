(function() {
    'use strict';

    // 名前を変数として定義
    var excludedStaffNames = ['魏 千恵'];

    // スクリプトが1度だけ実行されるようにフラグを設定
    var hasRun = false;

    // スタッフの公開/非公開を切り替える関数
    function toggleStaffVisibility() {
        if (hasRun) return; // 既に実行されている場合は何もしない
        hasRun = true; // 実行フラグを立てる

        // 全ての選択要素を取得
        var selectElements = document.querySelectorAll('.m_staff_card_action .a_select');

        // 非公開に変更
        selectElements.forEach(function(selectElement) {
            var cardTitle = selectElement.closest('.m_staff_card_action').previousElementSibling.querySelector('.m_staff_card_title');
            var staffName = cardTitle ? cardTitle.textContent.trim() : '';
            if (staffName && !excludedStaffNames.includes(staffName)) { // 配列に含まれていない場合
                selectElement.value = '1'; // 1は「非公開」
                var event = new Event('change', { bubbles: true });
                selectElement.dispatchEvent(event);
            }
        });

        // 7秒待機してから公開に変更
        setTimeout(changeToPublic, 7000);
        setTimeout(function() {
            location.reload();
        }, 17000); // 17秒後にリロード
    }

    // 非公開から公開に変更する関数
    function changeToPublic() {
        var selectElements = document.querySelectorAll('.m_staff_card_action .a_select');

        selectElements.forEach(function(selectElement) {
            var cardTitle = selectElement.closest('.m_staff_card_action').previousElementSibling.querySelector('.m_staff_card_title');
            var staffName = cardTitle ? cardTitle.textContent.trim() : '';
            if (staffName && !excludedStaffNames.includes(staffName)) { // 配列に含まれていない場合
                selectElement.value = '0'; // 0は「公開」
                var event = new Event('change', { bubbles: true });
                selectElement.dispatchEvent(event);
            }
        });
    }

    // 次の実行時間を設定 (ランダムな30〜50分の間隔)
    var nextExecution = new Date().getTime() + (30 + Math.random() * 20) * 60 * 1000;

    // カウントダウンタイマーの更新
    function updateCountdown() {
        var now = new Date().getTime();
        var timeLeft = nextExecution - now;

        if (timeLeft <= 0) {
            toggleStaffVisibility();
            return; // 実行後に即座にカウントダウン更新を終了する
        }

        var minutes = Math.floor((timeLeft % (1000 * 90 * 60)) / (1000 * 60));
        var seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        countdownElement.textContent = `次の実行まで: ${minutes}分 ${seconds}秒`;
    }

    // カウントダウン表示の作成
    var countdownElement = document.createElement('div');
    countdownElement.style.position = 'fixed';
    countdownElement.style.bottom = '10px';
    countdownElement.style.right = '10px';
    countdownElement.style.zIndex = 1000;
    countdownElement.style.padding = '10px';
    countdownElement.style.backgroundColor = '#333';
    countdownElement.style.color = 'white';
    countdownElement.style.border = 'none';
    countdownElement.style.borderRadius = '5px';

    document.body.appendChild(countdownElement);

    // 初回カウントダウンの表示
    updateCountdown();

    // カウントダウンタイマーの更新を毎秒行う
    setInterval(updateCountdown, 1000);

    setTimeout(changeToPublic, 60000); // ページをリロードしてから1分後

    // ボタンを作成してページに追加
    var button = document.createElement('button');
    button.innerText = '非公開になる場合こちらをクリック'; // ボタンに表示するテキスト
    button.style.position = 'fixed';
    button.style.bottom = '60px';
    button.style.right = '20px';
    button.style.padding = '10px 20px';
    button.style.backgroundColor = '#4CAF50'; // 背景色
    button.style.color = 'white'; // 文字色
    button.style.border = 'none'; // ボーダーを消す
    button.style.borderRadius = '5px'; // ボタンの角を丸くする
    button.style.cursor = 'pointer'; // カーソルをポインタにする

    // ボタンがクリックされたときにchangeToPublicを実行
    button.addEventListener('click', changeToPublic);

    // ページのbodyにボタンを追加
    document.body.appendChild(button);
})();
